name: CI

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    # build at least once a month
    - cron: '0 0 1 * *'

jobs:
  build-and-test:
    strategy:
      matrix:
        include:
          # regular builds
          - ARCH: x86_64
            RUNS_ON: ubuntu-24.04
            BUILD_TYPE: appimage
          - ARCH: i386
            RUNS_ON: ubuntu-24.04
            BUILD_TYPE: appimage
          - ARCH: armhf
            RUNS_ON: ubuntu-24.04-arm
            BUILD_TYPE: appimage
          - ARCH: aarch64
            RUNS_ON: ubuntu-24.04-arm
            BUILD_TYPE: appimage

          # test build
          - ARCH: x86_64
            RUNS_ON: ubuntu-24.04
            BUILD_TYPE: coverage

      fail-fast: false

    name: ${{ matrix.BUILD_TYPE }} ${{ matrix.ARCH }}
    runs-on: ${{ matrix.RUNS_ON }}

    env:
      ARCH: ${{ matrix.ARCH }}
      BUILD_TYPE: ${{ matrix.BUILD_TYPE }}
      # make sure to always(!) pull the base image
      UPDATE: 1

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build
        run: bash ci/build-in-docker.sh

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        if: matrix.BUILD_TYPE != 'coverage'
        with:
          name: AppImage  ${{ matrix.ARCH }}${{ matrix.USE_STATIC_RUNTIME}}
          path: linuxdeploy*.AppImage*

  upload:
    name: Create release and upload artifacts
    needs:
      - build-and-test
    runs-on: ubuntu-20.04
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Inspect directory after downloading artifacts
        run: ls -alFR
      - name: Create release and upload artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            wget -q https://github.com/TheAssassin/pyuploadtool/releases/download/continuous/pyuploadtool-x86_64.AppImage
            chmod +x pyuploadtool-x86_64.AppImage
            ./pyuploadtool-x86_64.AppImage ./**/linuxdeploy*.AppImage*
